# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: API Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy-digital-ocean:
    runs-on: ubuntu-latest
    environment: Production
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
          node-version: 18.x

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Install Dependencies
      run: npm install -g yarn && yarn install

    - name: Running Tests
      run: yarn test

    - name: Set up environment variables
      run: |
        ssh root@${{ secrets.SSH_HOST }} "bash -c '\
        cd /var/www
        if [ -d \"api\" ]; then
          echo \"Removing existing api directory...\"
        rm -rf api
        else
        echo \"No existing api directory found. Skipping removal.\"
        fi
        mkdir -p api # Ensure api directory exists for .env file
        ssh root@${{ secrets.SSH_HOST }} "bash -c '\
        cat << 'INNEREOF' > api/.env
        NODE_ENV=${{ secrets.NODE_ENV }}
        API_PORT=${{ secrets.API_PORT }}
        DB_PORT=${{ secrets.DB_PORT }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_HOST=${{ secrets.DB_HOST }}
        DB_USERNAME=${{ secrets.DB_USERNAME }}
        DB_NAME=${{ secrets.DB_NAME }}
        DB_SYNC=${{ secrets.DB_SYNC }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
        AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION=${{ secrets.AWS_REGION }}
        BUCKET_NAME=${{ secrets.BUCKET_NAME }}
        BUCKET_URL=${{ secrets.BUCKET_URL }}
        LOCAL_UPLOAD_FOLDER=${{ secrets.LOCAL_UPLOAD_FOLDER }}
        INNEREOF
        EOF

    - name: Deploy
      run: |
        ssh root@${{ secrets.SSH_HOST }} "chmod +x ~/deploy.sh && ~/deploy.sh"

